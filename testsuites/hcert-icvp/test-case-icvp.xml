<?xml version="1.0" encoding="UTF-8"?>
<testcase id="test-case-icvp"
  xmlns="http://www.gitb.com/tdl/v1/"
  xmlns:gitb="http://www.gitb.com/core/v1/">

  <metadata>
    <gitb:name>Validates QR code, retrieves and validates ICVP IPS Bundle.</gitb:name>
    <gitb:description>
      Upload a barcode image, decode to HC1 and CWT payload, install IGs on Matchbox via SMART Helper,
      transform inner content using ICVPClaimtoIPS, and validate the result against IPS Bundle profile.
    </gitb:description>
    <gitb:version>1.0</gitb:version>
  </metadata>

  <actors>
    <gitb:actor id="User" role="SUT"/>
    <gitb:actor id="HCertDecoder"/>
    <gitb:actor id="SMARTHelper"/>
    <gitb:actor id="FHIRValidator"/>
  </actors>

  <steps>

    <!-- 1) USER UPLOADS BARCODE IMAGE → /decode/image -->
    <interact id="userFileUpload" desc="Upload barcode image (PNG/JPG)">
      <request desc="File to upload:" name="uploadedFile" inputType="UPLOAD" required="true"/>
    </interact>

    <assign to="imgPart{name}">"image"</assign>
    <assign to="imgPart{contentType}">"image/png"</assign>
    <assign to="imgPart{fileName}">"barcode.png"</assign>
    <assign to="imgPart{content}">$userFileUpload{uploadedFile}</assign>
    <assign to="imgParts" append="true">$imgPart</assign>

    <assign to="imgHeaders{Accept}">"application/json"</assign>

    <send id="decodeImage" desc="Decode QR image → qr_data" handler="HttpMessagingV2" from="User" to="HCertDecoder">
      <input name="uri">"http://hcert-validator:8080/decode/image"</input>
      <input name="method">"POST"</input>
      <input name="parts">$imgParts</input>
      <input name="headers">$imgHeaders</input>
    </send>
    <verify handler="NumberValidator" desc="Image decode returns HTTP 200">
      <input name="actualnumber">$decodeImage{response}{status}</input>
      <input name="expectednumber">"200"</input>
    </verify>

    <process handler="JsonPointerProcessor" operation="process" output="qrData">
      <input name="content">$decodeImage{response}{body}</input>
      <input name="pointer">"/qr_data"</input>
    </process>

    <!-- 2) DECODE HC1 → /decode/hcert -->
    <assign to="qrParam{value}">$qrData</assign>
    <!-- Ask the decoder to include the _raw triplet so /cose/_raw exists -->
    <assign to="qrTemplate">'{"qr_data":"${value?json_string}","include_raw":true}'</assign>
    <process handler="TemplateProcessor" operation="process" output="qrBody">
      <input name="syntax">"freemarker"</input>
      <input name="template">$qrTemplate</input>
      <input name="parameters">$qrParam</input>
    </process>

    <assign to="jsonHeaders{Content-Type}">"application/json"</assign>
    <assign to="jsonHeaders{Accept}">"application/json"</assign>

    <send id="decodeHC1" desc="Decode HC1 → COSE/payload/hcert" handler="HttpMessagingV2" from="User" to="HCertDecoder">
      <input name="uri">"http://hcert-validator:8080/decode/hcert"</input>
      <input name="method">"POST"</input>
      <input name="headers">$jsonHeaders</input>
      <input name="body">$qrBody</input>
    </send>
    <verify handler="NumberValidator" desc="HC1 decode returns HTTP 200">
      <input name="actualnumber">$decodeHC1{response}{status}</input>
      <input name="expectednumber">"200"</input>
    </verify>

    <process handler="JsonPointerProcessor" operation="process" output="cwtPayload">
      <input name="content">$decodeHC1{response}{body}</input>
      <input name="pointer">"/payload"</input>
    </process>
    <process handler="JsonPointerProcessor" operation="process" output="innerContent">
      <input name="content">$cwtPayload</input>
      <input name="pointer">"/-260/-6"</input>
    </process>

    <!-- 3.5) COSE SIGNATURE VERIFICATION (NON-BLOCKING) -->
    <process handler="JsonPointerProcessor" operation="process" output="coseRaw">
      <input name="content">$decodeHC1{response}{body}</input>
      <input name="pointer">"/cose/_raw"</input>
    </process>

    <assign to="verifyParams{cose_raw}">$coseRaw</assign>
    <assign to="verifyParams{use_gdhcn}">true()</assign>
    <assign to="verifyParams{gdhcn_env}">"dev"</assign>
    <assign to="verifyParams{participant}">"-"</assign>
    <assign to="verifyParams{domain}">"PH4H"</assign>
    <assign to="verifyParams{usage}">"DSC"</assign>
    <assign to="verifyParams{verify_did_proof}">true()</assign>
    <assign to="verifyParams{allow_unverified_trustlist}">true()</assign>
    <assign to="verifyParams{allow_remote_contexts}">true()</assign>
    <assign to="verifyParams{context_dir}">"contexts"</assign>

    <assign to="verifyTpl">
      '{"cose_raw":${cose_raw},"use_gdhcn":${use_gdhcn?c},"gdhcn_env":"${gdhcn_env}","participant":"${participant}","domain":"${domain}","usage":"${usage}","verify_did_proof":${verify_did_proof?c},"allow_unverified_trustlist":${allow_unverified_trustlist?c},"allow_remote_contexts":${allow_remote_contexts?c},"context_dir":"${context_dir}"}'
    </assign>
    <process handler="TemplateProcessor" operation="process" output="verifyBody">
      <input name="syntax">"freemarker"</input>
      <input name="template">$verifyTpl</input>
      <input name="parameters">$verifyParams</input>
    </process>

    <assign to="verifyHeaders{Content-Type}">"application/json"</assign>
    <assign to="verifyHeaders{Accept}">"application/json"</assign>
    <send id="verifyCose" desc="Verify COSE signature (non-blocking)" handler="HttpMessagingV2" from="User" to="HCertDecoder">
      <input name="uri">"http://hcert-validator:8080/verify/signature"</input>
      <input name="method">"POST"</input>
      <input name="headers">$verifyHeaders</input>
      <input name="body">$verifyBody</input>
    </send>

    <assign to="sigHttp">$verifyCose{response}{status}</assign>

    <process handler="JsonPointerProcessor" operation="process" output="sigValid">
      <input name="content">$verifyCose{response}{body}</input>
      <input name="pointer">"/valid"</input>
    </process>
    <process handler="JsonPointerProcessor" operation="process" output="sigKid">
      <input name="content">$verifyCose{response}{body}</input>
      <input name="pointer">"/verified_with_kid"</input>
    </process>
    <process handler="JsonPointerProcessor" operation="process" output="sigKidHdr">
      <input name="content">$verifyCose{response}{body}</input>
      <input name="pointer">"/kid_in_header"</input>
    </process>
    <process handler="JsonPointerProcessor" operation="process" output="sigMsg">
      <input name="content">$verifyCose{response}{body}</input>
      <input name="pointer">"/message"</input>
    </process>
    <process handler="JsonPointerProcessor" operation="process" output="sigTried">
      <input name="content">$verifyCose{response}{body}</input>
      <input name="pointer">"/candidates_tried"</input>
    </process>

    <!-- Wrap verifies so connect errors don't crash -->
    <if>
      <cond>string-length(normalize-space($sigHttp)) &gt; 0</cond>
      <then>
        <verify handler="NumberValidator" desc="COSE signature HTTP response check">
          <input name="actualnumber">$sigHttp</input>
          <input name="expectednumber">"200"</input>
        </verify>
        <verify handler="StringValidator" desc="COSE signature validity check">
          <input name="actualstring">$sigValid</input>
          <input name="expectedstring">"true"</input>
        </verify>
        <verify handler="ExpressionValidator" desc="COSE signature verification successful">
          <input name="expression">($sigHttp = "200") and ($sigValid = "true")</input>
        </verify>
      </then>
      <else>
        <log>"⚠️ Signature verifier not reachable (no HTTP status). Continuing."</log>
      </else>
    </if>

    <log>"=========================================="</log>
    <log>"SIGNATURE VERIFICATION RESULTS:"</log>
    <log>"  HTTP Status: " || $sigHttp || " (expected 200)"</log>
    <log>"  Valid: " || $sigValid || " (expected true)"</log>
    <log>"  KID in header: " || $sigKidHdr</log>
    <log>"  KID verified with: " || $sigKid</log>
    <log>"  Candidates tried: " || $sigTried</log>
    <log>"  Message: " || $sigMsg</log>
    <log>"=========================================="</log>

    <!-- 3) INSTALL TWO IGs VIA SMART HELPER -->
    <assign to="igHeaders{Content-Type}">"application/json"</assign>
    <assign to="igHeaders{Accept}">"application/json"</assign>

    <assign to="ig1Params{url}">"https://worldhealthorganization.github.io/smart-trust-phw"</assign>
    <assign to="ig1Params{target}">"matchbox"</assign>
    <assign to="ig1Template">'{"ig_url":"${url}", "target":"${target}"}'</assign>
    <process handler="TemplateProcessor" operation="process" output="igBody1">
      <input name="syntax">"freemarker"</input>
      <input name="template">$ig1Template</input>
      <input name="parameters">$ig1Params</input>
    </process>

    <log>$igBody1</log>

    <send id="uploadIG1" desc="Upload IG #1 to Matchbox" handler="HttpMessagingV2" from="User" to="SMARTHelper">
      <input name="uri">"http://smart-helper:8000/upload_ig"</input>
      <input name="method">"POST"</input>
      <input name="headers">$igHeaders</input>
      <input name="body">$igBody1</input>
    </send>
    <verify handler="NumberValidator" desc="IG #1 upload returns HTTP 200">
      <input name="actualnumber">$uploadIG1{response}{status}</input>
      <input name="expectednumber">"200"</input>
    </verify>

    <assign to="ig2Params{url}">"https://WorldHealthOrganization.github.io/smart-icvp"</assign>
    <assign to="ig2Params{target}">"matchbox"</assign>
    <assign to="ig2Template">'{"ig_url":"${url}", "target":"${target}"}'</assign>
    <process handler="TemplateProcessor" operation="process" output="igBody2">
      <input name="syntax">"freemarker"</input>
      <input name="template">$ig2Template</input>
      <input name="parameters">$ig2Params</input>
    </process>

    <log>$igBody2</log>

    <send id="uploadIG2" desc="Upload IG #2 to Matchbox" handler="HttpMessagingV2" from="User" to="SMARTHelper">
      <input name="uri">"http://smart-helper:8000/upload_ig"</input>
      <input name="method">"POST"</input>
      <input name="headers">$igHeaders</input>
      <input name="body">$igBody2</input>
    </send>
    <verify handler="NumberValidator" desc="IG #2 upload returns HTTP 200">
      <input name="actualnumber">$uploadIG2{response}{status}</input>
      <input name="expectednumber">"200"</input>
    </verify>

    <!-- 4) TRANSFORM VIA SMART HELPER → /transform -->
    <assign to="transformParams{obj}">$innerContent</assign>
    <assign to="transformTemplate">'${obj}'</assign>
    <process handler="TemplateProcessor" operation="process" output="transformBody">
      <input name="syntax">"freemarker"</input>
      <input name="template">$transformTemplate</input>
      <input name="parameters">$transformParams</input>
    </process>

    <assign to="xformHeaders{Content-Type}">"application/fhir+json"</assign>
    <assign to="xformHeaders{Accept}">"application/json"</assign>
    <assign to="xformQuery{source}">"http://smart.who.int/icvp/StructureMap/ICVPClaimtoIPS"</assign>

    <send id="doTransform" desc="StructureMap $transform (SMART Helper)" handler="HttpMessagingV2" from="User" to="SMARTHelper">
      <input name="uri">"http://smart-helper:8000/transform"</input>
      <input name="method">"POST"</input>
      <input name="headers">$xformHeaders</input>
      <input name="parameters">$xformQuery</input>
      <input name="body">$transformBody</input>
    </send>
    <verify handler="NumberValidator" desc="Transform HTTP 200">
      <input name="actualnumber">$doTransform{response}{status}</input>
      <input name="expectednumber">"200"</input>
    </verify>

    <process handler="JsonPointerProcessor" operation="process" output="bundleResult">
      <input name="content">$doTransform{response}{body}</input>
      <input name="pointer">"/result"</input>
    </process>

    <!-- 5) VALIDATE THE BUNDLE VIA SMART HELPER → /validate -->
    <assign to="valParams{obj}">$bundleResult</assign>
    <assign to="valResourceTemplate">'${obj}'</assign>
    <process handler="TemplateProcessor" operation="process" output="valResourceBody">
      <input name="syntax">"freemarker"</input>
      <input name="template">$valResourceTemplate</input>
      <input name="parameters">$valParams</input>
    </process>

    <!-- Centralize the FHIR host here -->
    <assign to="fhirHost">"http://fhir-server:8080/fhir"</assign>
    <!-- If needed, swap to: "http://matchbox:8080/matchboxv3/fhir" or "http://fhir:8080/fhir" -->

    <assign to="validateBody">
      concat('{"resource": ', $valResourceBody, ', "profile_url": "http://smart.who.int/icvp/StructureDefinition/Bundle-uv-ips-ICVP", "host": "', $fhirHost, '"}')
    </assign>

    <log>concat('Validation body: ', $validateBody)</log>

    <send id="validateIPS" desc="Validate IPS Bundle (via SMART Helper)" handler="HttpMessagingV2" from="User" to="FHIRValidator">
      <input name="uri">"http://smart-helper:8000/validate"</input>
      <input name="method">"POST"</input>
      <input name="headers">$jsonHeaders</input>
      <input name="body">$validateBody</input>
    </send>
    <verify handler="NumberValidator" desc="Validation HTTP 200">
      <input name="actualnumber">$validateIPS{response}{status}</input>
      <input name="expectednumber">"200"</input>
    </verify>

    <process handler="JsonPointerProcessor" operation="process" output="validationIssues">
      <input name="content">$validateIPS{response}{body}</input>
      <input name="pointer">"/issues"</input>
    </process>

  </steps>

  <output>
    <success>
      <default>"Barcode decoded, CWT transformed to IPS Bundle, and validation executed successfully."</default>
    </success>
  </output>
</testcase>
